{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css"],"names":["ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetState","this","className","styles","form","labelName","input","type","onChange","btn","disabled","Component","Filter","onFilter","filter","label","ContactList","onDeleteContact","visibleContacts","map","id","item","onClick","App","contacts","handleFilter","handleNewContact","newContact","checkIdenticalNames","alert","addContact","some","contact","contactId","uuidv4","userInfo","deleteContact","storageContacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","normalizeFilter","toLowerCase","includes","ReactDOM","render","StrictMode","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.673984e9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.resetState();\n  };\n\n  resetState = () => this.setState({ name: '', number: '' });\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.labelName}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button\n          className={styles.btn}\n          type=\"submit\"\n          disabled={!(name && number) && true}\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ onFilter, filter }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onFilter}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ onDeleteContact, visibleContacts }) => {\n  return (\n    <ul>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li className={styles.item} key={id}>\n          {name}: {number}\n          <button\n            className={styles.btn}\n            type=\"button\"\n            name={id}\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  visibleContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nclass App extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n    filter: PropTypes.string,\n  };\n\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const storageContacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (storageContacts) {\n      this.setState({ contacts: storageContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleFilter = event => {\n    const { value } = event.currentTarget;\n\n    this.setState({ filter: value });\n  };\n\n  handleNewContact = newContact => {\n    const { name, number } = newContact;\n    const isAlreadyInContacts = this.checkIdenticalNames(name);\n\n    if (isAlreadyInContacts) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      this.addContact(name, number);\n    }\n  };\n\n  checkIdenticalNames = name => {\n    return this.state.contacts.some(contact => contact.name === name);\n  };\n\n  addContact = (name, number) => {\n    const contactId = uuidv4();\n\n    this.setState(({ contacts }) => {\n      const userInfo = { id: contactId, name, number };\n\n      return { contacts: [...contacts, userInfo] };\n    });\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(({ id }) => id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.handleNewContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onFilter={this.handleFilter} />\n        <ContactList\n          onDeleteContact={this.deleteContact}\n          visibleContacts={visibleContacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"labelName\":\"ContactForm_labelName__3V3cS\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__1Xk4q\",\"item\":\"ContactList_item__3YsZK\"};"],"sourceRoot":""}